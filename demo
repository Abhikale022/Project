import axios from "axios";
const API_BASE_URL = "http://localhost:8080";

const customerAPI = axios.create({
  baseURL: `${API_BASE_URL}/customer`,
});

customerAPI.interceptors.request.use((req) => {
  const token = localStorage.getItem("customerToken");
  if (token) {
    req.headers.Authorization = `Bearer ${token}`;
  }
  return req;
});

// --- Existing ---
const loginSalesUser = async (credentials) => {
  const response = await axios.post(`${API_BASE_URL}/salesuser/login`, {
    userId: credentials.userId,
    password: credentials.password,
  });
  return response.data;
};

const signupCustomer = async (customerData) => {
  const response = await customerAPI.post(`/signup`, {
    name: customerData.name,
    email: customerData.email,
    password: customerData.password,
  });
  return response.data;
};

const loginCustomer = async (credentials) => {
  const response = await axios.post(`${API_BASE_URL}/customer/login`, {
    email: credentials.username,
    password: credentials.password,
  });
  return response.data;
};

const logoutCustomer = () => {
  localStorage.removeItem("customerToken");
};

// --- New Forgot/Reset Password ---
const forgotPassword = async (email) => {
  const response = await axios.post(`${API_BASE_URL}/customer/forgot-password`, { email });
  return response.data;
};

const resetPassword = async ({ email, resetCode, newPassword }) => {
  const response = await axios.post(`${API_BASE_URL}/customer/reset-password`, {
    email,
    resetCode,
    newPassword,
  });
  return response.data;
};

const UnifiedLoginModalService = {
  loginSalesUser,
  signupCustomer,
  loginCustomer,
  logoutCustomer,
  forgotPassword,
  resetPassword,
  customerAPI,
};

export default UnifiedLoginModalService;